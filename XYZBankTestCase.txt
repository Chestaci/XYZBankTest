Кейс 1. Проверка успешного создания клиента

Предусловие:

1. Открыть браузер
2. Перейти на страницу https://www.globalsqa.com/angularJs-protractor/BankingProject/#/manager

Параметры тест кейса: (@FirstName, @LastName, @PostCode)

1. Name, Surname, 111111 (успешное создание клиента)
2. иМяName, фАмИлИяSuRname, кОдPoStCode (успешное создание клиента с заполнением полей русскими и латинскими буквами в разных регистрах)
3. 1, 1, 1 (успешное создание клиента с заполнением полей одной цифрой)
4. @#$%^&, @#$%^&, @#$%^& (успешное создание клиента с заполнением полей специальными символами)
5. Nameeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, Surnameeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 111111111111111111111111111111111111111111111111
(успешное создания клиента с заполнением полей длинными значениями)
6. Name123456, Surname123456, Postcode123456 (успешное создание клиента с заполнением полей буквами и цифрами)

Шаги:

1. Нажать на кнопку Add Customer
2. Заполнить поле First Name значением  @FirstName
3. Заполнить поле Last Name значением  @LastName
4. Заполнить поле Post Code значением  @PostCode
5. Нажать на кнопку Add Customer

Ожидаемый результат:

1. На странице появилось всплывающее окно с надписью: «Customer added successfully with customer id :» и номер id



Кейс 2. Проверка сообщения об ошибке при попытке создания клиента с незаполненными полями

Предусловие:

1. Открыть браузер
2. Перейти на страницу https://www.globalsqa.com/angularJs-protractor/BankingProject/#/manager

Параметры тест кейса: (@FirstName, @LastName, @PostCode)

1. null (поле не заполняется), Surname, 111111 (сообщения об ошибке при попытке создания клиента с пустым полем First Name)
2. Name, null (поле не заполняется), 111111 (сообщения об ошибке при попытке создания клиента с пустым полем Last Name)
3. Name, Surname, null (поле не заполняется) (сообщения об ошибке при попытке создания клиента с пустым полем Post Code)

Шаги:

1. Нажать на кнопку Add Customer
2. Заполнить поле First Name значением  @FirstName
3. Заполнить поле Last Name значением  @LastName
4. Заполнить поле Post Code значением  @PostCode
5. Нажать на кнопку Add Customer

Ожидаемый результат:

1. На странице появилось всплывающее окно с надписью: «Fill out this field.»




Кейс 3. Проверка сообщения об ошибке при попытке создания клиента с заполнением полей пробелом

Предусловие:

1. Открыть браузер
2. Перейти на страницу https://www.globalsqa.com/angularJs-protractor/BankingProject/#/manager

Шаги:

1. Нажать на кнопку Add Customer
2. Заполнить поле First Name пробелом
3. Заполнить поле Last Name пробелом
4. Заполнить поле Post Code пробелом
5. Нажать на кнопку Add Customer

Ожидаемый результат:

1. На странице появилось всплывающее окно с надписью: «Please check the details. Customer may be duplicate.»




Кейс 4. Проверка сообщения об ошибке при попытке добавления дубликата клиента

Предусловие:

1. Открыть браузер
2. Перейти на страницу https://www.globalsqa.com/angularJs-protractor/BankingProject/#/manager
3. Создать клиента (см. кейc 1)
4. Подвердить создание клиента нажатием кнопки Ок во всплывающем окне

Шаги:

1. Заполнить поле First Name таким же значением (см. кейc 1)
2. Заполнить поле Last Name таким же значением (см. кейc 1)
3. Заполнить поле Post Code таким же значением (см. кейc 1)
4. Нажать на кнопку Add Customer

Ожидаемый результат:

1. На странице появилось всплывающее окно с надписью: «Please check the details. Customer may be duplicate.»





Кейс 5. Проверка успешной сортировки клиентов по имени в обратном порядке

Предусловие:

1. Открыть браузер
2. Перейти на страницу https://www.globalsqa.com/angularJs-protractor/BankingProject/#/manager

Шаги:

1. Нажать на кнопку Customers
2. Нажать 1 раз на вкладку First Name

Ожидаемый результат:

1. На странице Customers список клиентов отсортировался в обратном порядке





Кейс 6. Проверка успешной сортировки клиентов по имени в алфавитном порядке

Предусловие:

1. Открыть браузер
2. Перейти на страницу https://www.globalsqa.com/angularJs-protractor/BankingProject/#/manager

Шаги:

1. Нажать на кнопку Customers
2. Нажать 2 раза на вкладку First Name

Ожидаемый результат:

1. На странице Customers список клиентов отсортировался в алфавитном порядке





Кейс 7. Проверка успешного поиска клиентов по совпадению вводимых данных

Предусловие:

1. Открыть браузер
2. Перейти на страницу https://www.globalsqa.com/angularJs-protractor/BankingProject/#/manager
3. Нажать на кнопку Customers
4. Проверить наличие клиентов в списке в соответствии с параметрами поиска

Параметры тест кейса: (@SearchCustomer)

1. l (латинская буква) (успешный поиск клиентов по совпадению одной буквы)
2. Weasly (успешный поиск клиентов по совпадению последовательности букв)
3. 55 (успешный поиск клиентов по совпадению цифр)

Шаги:

1. Ввести в поле Search Customer значение @SearchCustomer

Ожидаемый результат:

1. На странице Customers в списке клиентов остались только те строчки, в которых есть совпадения с введёнными данными





Кейс 8. Проверка поиска несуществующего клиента

Предусловие:

1. Открыть браузер
2. Перейти на страницу https://www.globalsqa.com/angularJs-protractor/BankingProject/#/manager
3. Нажать на кнопку Customers
4. Проверить отсутствие клиентов в списке в соответствии с параметрами поиска

Шаги:

1. Ввести в поле Search Customer значение Harold

Ожидаемый результат:

1. На странице Customers в списке клиентов не осталось ни одной строчки.